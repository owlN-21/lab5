@RenderSection("Scripts", required: false)
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - lab</title>
    <script src="https://cdn.tailwindcss.com"></script>

    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        swamp: {
                            50: '#f0fdf4',
                            100: '#dcfce7',
                            200: '#bbf7d0',
                            300: '#86efac',
                            400: '#4ade80',
                            500: '#22c55e',
                            600: '#16a34a',
                            700: '#15803d',
                            800: '#166534',
                            900: '#14532d',
                        }
                    }
                }
            }
        }
    </script>

    <style>

        #mobile-menu {
            transition: all 0.3s ease-out;
            transform-origin: top;
        }

        #mobile-menu.hidden {
            opacity: 0;
            transform: scaleY(0);
        }

        #mobile-menu.block {
            opacity: 1;
            transform: scaleY(1);
        }
    </style>

</head>

<body class="bg-swamp-50 pt-16 w-full">
    <header>
        <!-- Navigation -->
        <nav class="bg-white shadow-lg fixed top-0 z-50 w-full">
            <div class="w-full max-w-7xl mx-auto px-4">
                <div class="flex justify-between items-center h-16">
                    <!-- Logo -->
                    <a href="index.html" class="flex items-center space-x-2">
                        <img src="~/images/green-toad-logo.svg" alt="Greenswamp Logo" class="h-8 w-8">
                        <span class="text-2xl font-bold text-swamp-600">Greenswamp</span>
                    </a>

                    <!-- Desktop Menu -->
                    <div class="hidden md:flex space-x-8 items-center">
                    <a class="my-auto text-swamp-600 hover:text-swamp-800 font-medium" asp-area="Feed" asp-controller="Home">Feed</a>
                        <a href="#" class="text-swamp-600 hover:text-swamp-800 font-medium">Swamp</a>
                        <a href="#" class="text-swamp-600 hover:text-swamp-800 font-medium">Ponds</a>
                        <a href="#" class="text-swamp-600 hover:text-swamp-800 font-medium">Fireflies</a>
                        <button class="bg-swamp-500 text-white px-6 py-2 rounded-full hover:bg-swamp-600">New Ribbit</button>
                    </div>

                    <!-- Mobile Menu Button -->
                    <button id="mobile-menu-button" class="md:hidden text-swamp-600 hover:text-swamp-800">
                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>
                        </svg>
                    </button>
                </div>
            </div>

            <!-- Mobile Menu -->
            <div id="mobile-menu" class="hidden md:hidden absolute w-full bg-white shadow-lg">
                <div class="px-4 py-2 space-y-4">
                    <a class="my-auto text-swamp-600 hover:text-swamp-800 font-medium" asp-area="Feed" asp-controller="Home">Feed</a>
                    <a href="#" class="text-swamp-600 hover:text-swamp-800 font-medium">Swamp</a>
                    <a href="#" class="text-swamp-600 hover:text-swamp-800 font-medium">Ponds</a>
                    <a href="#" class="text-swamp-600 hover:text-swamp-800 font-medium">Fireflies</a>
                    <button class="w-full bg-swamp-500 text-white px-6 py-2 rounded-full hover:bg-swamp-600">New Ribbit</button>
                </div>
            </div>
        </nav>
    </header>

    <div class="w-full">
        <main role="main" class="pb-0 mb-0 w-full">
            @RenderBody()
        </main>
    </div>

    <footer class="bg-swamp-900 text-white">
        <div class="max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:px-8">
            <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
                <div>
                    <div class="flex items-center space-x-2">
                        <img src="~/images/green-toad-logo.svg" alt="Greenswamp Logo" class="h-8 w-8">
                        <span class="text-xl font-bold">Greenswamp</span>
                    </div>
                    <p class="mt-4 text-sm text-swamp-300">
                        Connecting people one ribbit at a time.
                    </p>
                </div>
                <div class="grid grid-cols-2 gap-8">
                    <div>
                        <h4 class="text-sm font-semibold">Company</h4>
                        <ul class="mt-4 space-y-2 text-sm">
                            <a class="my-auto text-swamp-600 hover:text-swamp-800 font-medium" asp-area="Feed" asp-controller="Home">Feed</a>
                            <li><a asp-page="/About" class="text-swamp-300 hover:text-white">About</a></li>
                            <li><a  asp-page="/Contact" class="text-swamp-300 hover:text-white">Contact</a></li>
                        </ul>
                    </div>
                    <div>
                        <h4 class="text-sm font-semibold">Legal</h4>
                        <ul class="mt-4 space-y-2 text-sm">
                            <li><a asp-page="/Privacy" class="text-swamp-300 hover:text-white">Privacy</a></li>
                            <li><a asp-page="/Tos" class="text-swamp-300 hover:text-white">Terms</a></li>
                        </ul>
                    </div>
                </div>
                <div>
                    <h4 class="text-sm font-semibold">Stay Updated</h4>
                    <!-- <form class="mt-4 flex">
                        <input type="email" placeholder="Enter your email" class="px-4 py-2 rounded-l-full flex-1 text-swamp-900">
                        <button class="bg-swamp-500 px-6 py-2 rounded-r-full hover:bg-swamp-600">Subscribe</button>
                    </form> -->
                    <form class="mt-4 flex" asp-page="/Index" onsubmit="handleSubscribe(event)">
                        <input
                                type="text"
                                name="Username"
                                id="subscribeUsername"
                                placeholder="Enter your Telegram username (username)"
                                required
                                class="px-4 py-2 rounded-l-full flex-1 text-swamp-900 border border-swamp-200 focus:ring-2 focus:ring-swamp-400 focus:border-transparent"
                        >
                        <button
                                type="submit"
                                class="bg-swamp-500 px-6 py-2 rounded-r-full hover:bg-swamp-600 transition-colors text-white"
                        >
                            Subscribe
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </footer>

<div id="subscribePopup"
     class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-[100]">
    <div class="bg-white rounded-xl max-w-md w-full p-6 relative shadow-lg">
        <div class="text-center">
            <div class="mx-auto w-24 h-24 bg-swamp-100 rounded-full flex items-center justify-center mb-4">
                <img src="~/images/green-toad-wink.svg" alt="The toad approves" class=" w-16 h-16">
            </div>
            <h3 class="text-xl font-bold text-swamp-900 mb-2">You're In the Pond!</h3>
            <p class="text-swamp-700">
                Thanks for hopping on board! Check your inbox for
                <span class="italic">swamp updates</span>.
            </p>
            <button onclick="closeSubscribePopup()"
                    class="mt-6 bg-swamp-500 text-white px-6 py-2 rounded-full hover:bg-swamp-600 transition-colors">
                Ribbitastic!
            </button>
        </div>
    </div>
</div>

<script>
    async function handleSubscribe(e) {
        e.preventDefault();
        const username = document.getElementById('subscribeUsername').value.trim();

        if (!username) {
            alert("Please enter your Telegram username");
            return;
        }

        try {
            const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
            
            const response = await fetch('/Index?handler=Subscribe', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'RequestVerificationToken': token
                },
                body: `username=${encodeURIComponent(username)}`
            });

            if (response.ok) {
                showSubscribePopup();
                document.getElementById('subscribeUsername').value = '';
            } else {
                const error = await response.text();
                alert("Error: " + error);
            }
        } catch (error) {
            console.error("Error:", error);
            alert("An error occurred. Please try again.");
        }
    }

    // Остальные функции остаются без изменений
    function showSubscribePopup() {
        const popup = document.getElementById('subscribePopup');
        popup.classList.remove('hidden');
        popup.setAttribute('aria-hidden', 'false');
    }

    function closeSubscribePopup() {
        const popup = document.getElementById('subscribePopup');
        popup.classList.add('hidden');
        popup.setAttribute('aria-hidden', 'true');
    }

    // Закрытие попапа при клике вне его области
    document.getElementById('subscribePopup').addEventListener('click', (e) => {
        if (e.target === document.getElementById('subscribePopup')) {
            closeSubscribePopup();
        }
    });

    function showSubscribePopup() {
        const popup = document.getElementById('subscribePopup');
        popup.classList.remove('hidden');
        popup.setAttribute('aria-hidden', 'false');
    }

    function closeSubscribePopup() {
        const popup = document.getElementById('subscribePopup');
        popup.classList.add('hidden');
        popup.setAttribute('aria-hidden', 'true');
    }

    // Close popup when clicking outside
    document.getElementById('subscribePopup').addEventListener('click', (e) => {
        if (e.target === document.getElementById('subscribePopup')) {
            closeSubscribePopup();
        }
    });
</script>


    <script>
        // Mobile Menu Toggle
        const mobileMenuButton = document.getElementById('mobile-menu-button');
        const mobileMenu = document.getElementById('mobile-menu');

        mobileMenuButton.addEventListener('click', () => {
            mobileMenu.classList.toggle('hidden');
            mobileMenu.classList.toggle('block');
        });

        // Close menu when clicking outside
        document.addEventListener('click', (event) => {
            if (!mobileMenu.contains(event.target) && !mobileMenuButton.contains(event.target)) {
                mobileMenu.classList.add('hidden');
                mobileMenu.classList.remove('block');
            }
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
